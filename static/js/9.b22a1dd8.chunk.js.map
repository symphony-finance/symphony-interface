{"version":3,"sources":["webpack:///./src/assets/images/dropdown.svg?d0dc","webpack:///./src/assets/images/ethereum-logo.svg?ca9a","components/TokenLogo/index.js","components/CurrencyInputPanel/index.js","components/OversizedPanel/index.js","assets/svg/SVGArrowDown.js","assets/svg/SVGClose.js","assets/svg/SVGDiv.js","state/multicall/hooks.js","hooks/trade.js","utils/rate.js","components/Row/index.jsx","components/Column/index.jsx","components/TransactionConfirmationModal/index.js","components/ExchangePage/index.jsx","components/OrderCard/index.js","components/PastOrderCard/index.jsx","components/OrdersHistory/index.js","components/Orders/index.jsx","pages/Swap/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","stroke","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","points","preserveAspectRatio","BAD_IMAGES","Image","styled","img","size","Emoji","span","StyledEthereumLogo","EthereumLogo","TokenLogo","address","rest","useState","error","setError","path","style","lineHeight","role","aria-label","isAddress","TOKEN_ICON_API","toLowerCase","alt","src","onError","GAS_MARGIN","ethers","BigNumber","from","SubCurrencySelect","button","theme","flexRowNoWrap","zumthorBlue","royalGreen","InputRow","div","Input","BorderlessInput","salmonRed","inputBackground","StyledBorderlessInput","concreteGray","CurrencySelect","selected","textColor","mercuryGray","darken","Aligner","StyledDropDown","DropDown","InputPanel","flexColumnNoWrap","transparentize","shadowColor","Container","malibuGreen","LabelRow","doveGray","LabelContainer","ErrorSpan","TokenModal","ModalHeader","CloseColor","Close","CloseIcon","SearchContainer","TokenModalInfo","TokenList","TokenModalRow","doveGrey","tokenRowHover","mediaWidth","upToMedium","TokenRowLeft","TokenSymbolGroup","TokenFullName","chaliceGray","TokenRowBalance","TokenRowUsd","TokenRowRight","StyledTokenName","SpinnerWrapper","Spinner","CurrencyInputPanel","onValueChange","allBalances","renderInput","onCurrencySelected","description","extraText","extraTextClickHander","errorMessage","disableUnlock","disableTokenSelect","selectedTokenAddress","showUnlock","value","showCurrencySelector","t","useTranslation","modalIsOpen","setModalIsOpen","tokenContract","useTokenContract","selectedTokenExchangeAddress","useTokenDetails","exchangeAddress","pendingApproval","usePendingApproval","addTransaction","useTransactionAdder","allTokens","useAllTokenDetails","data-tip","onClick","label","background","color","border","borderRadius","padding","marginTop","type","min","placeholder","step","onChange","e","onKeyPress","which","keyCode","preventDefault","stopPropagation","a","estimate","approve","constants","MaxUint256","estimatedGas","gasLimit","calculateGasMargin","then","response","approval","symbol","CurrencySelectModal","isOpen","onDismiss","onTokenSelect","searchQuery","setSearchQuery","name","ethPrice","useUSDPrice","_usdAmounts","map","k","ethRate","isNaN","balance","USDRate","times","toString","pow","decimals","usdAmounts","reduce","accumulator","currentValue","tokenList","useMemo","filter","sort","b","aSymbol","bSymbol","aBalance","bBalance","gt","usdBalance","formatEthBalance","formatTokenBalance","filteredTokenList","tokenEntry","tokenEntryKey","match","RegExp","escapeStringRegex","some","m","inputRef","useRef","clearInputAndDismiss","Modal","minHeight","initialFocusRef","isMobile","undefined","SearchIcon","event","input","checksummedInput","_onTokenSelect","id","Circle","lt","formatToUsd","Panel","PanelTop","PanelBottom","OversizedPanel","hideTop","hideBottom","children","SVGArrowDown","SVGDiv","version","x1","y1","x2","y2","strokeWidth","SVGClose","isMethodArg","x","INVALID_RESULT","valid","blockNumber","data","INVALID_CALL_STATE","result","loading","syncing","LOADING_CALL_STATE","useMultipleContractSingleData","addresses","contractInterface","methodName","callInputs","options","fragment","getFunction","callData","Array","isArray","every","y","isValidMethodArgs","encodeFunctionData","results","calls","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","res","c","Boolean","toCallKey","JSON","stringify","console","log","message","useEffect","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","useCallsData","latestBlockNumber","useBlockNumber","callResult","success","decodeFunctionResult","debug","toCallState","PairState","PAIR_INTERFACE","Interface","PAIR_ABI","useTradeExactIn","currencyAddressIn","currencyValueIn","currencyAddressOut","currencyIn","currencyOutDetail","currencyOut","ETHER","Token","currencyInputAmount","currency","typedValueParsed","parseUnits","TokenAmount","JSBI","BigInt","CurrencyAmount","ether","tryParseAmount","allowedPairs","currencyA","currencyB","bases","BASES_TO_CHECK_TRADES_AGAINST","wrappedCurrency","tokenA","tokenB","allPairs","usePairs","base","flatMap","otherBase","values","memo","curr","liquidityToken","useAllCommonPairs","tradeRes","Trade","bestTradeExactIn","maxHops","maxNumResults","currencies","tokens","equals","Pair","getAddress","reserves","_reserve0","_reserve1","sortsBefore","token0","token1","WETH","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","mul","Row","Box","align","justify","RowBetween","gap","Column","AutoColumn","Wrapper","Section","BottomSection","bg2","Text","p","TransactionErrorModal","maxHeight","fontWeight","fontSize","textAlign","Button","DownArrowBackground","DownArrow","clickable","active","RateIcon","RateIconSVG","icon","ExchangeRateWrapper","ExchangeRate","Flex","getInitialSwapState","outputCurrency","independentValue","dependentValue","independentField","prevIndependentField","inputCurrency","rateOp","inputRateValue","stoplossValue","swapStateReducer","action","rate","utils","flipped","amountFormatter","flipRate","payload","field","newInputCurrency","newOutputCurrency","Number","exchangeRateDiff","exchangeRateA","exchangeRateB","sub","ExchangePage","outputValueFormatted","outputValueParsed","rateRaw","initialCurrency","useWeb3React","account","library","showConfirm","setShowConfirm","orderErrorMessage","setOrderErrorMessage","useReducer","swapState","dispatchSwapState","symphonyContract","useSymphonyContract","wethGatewayContract","useWETHGatewayContract","inputError","setInputError","swapType","getSwapType","inputSymbol","outputSymbol","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","isInteger","Math","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","inputValueParsed","inputValueFormatted","inputAmount","toExact","number","units","margin","safeParseUnits","exchangeRate","applyExchangeRateTo","outputAmount","toSignificant","usedInput","rateFormatted","inverseRateInputSymbol","inverseRateOutputSymbol","inverseRate","gasPrice","useGasPrice","GENERIC_GAS_LIMIT_ORDER_EXECUTE","requiredGas","gasInInputTokens","realInputValue","executionRate","limitSlippage","limitExecution","independentError","setIndependentError","executionRateDelta","executionRateNegative","Zero","executionRateWarning","abs","parsedValue","lte","gte","Error","setShowUnlock","inputValueCalculation","inverted","setInverted","exchangeRateInverted","rateDelta","highSlippageWarning","rateDeltaFormatted","isValid","estimatedText","formatBalance","ReactGA","category","minimumReturn","stoplossAmount","fromCurrency","WETH_ADDRESSES","toCurrency","ETH_ADDRESS","order","recipient","inputToken","outputToken","minReturnAmount","orderId","getOrderId","orderHash","ZERO_BYTES32","createEthOrder","getTokenAllowance","SYMPHONY_ADDRESSES","getERC20Contract","tx","wait","createOrder","hash","ACTION_PLACE_ORDER","customSlippageError","useFetchAllBalances","valueToSet","parseEther","selectedTokens","rateValue","className","disabled","warning","startsWith","CancelButton","Order","Spacer","RightArrow","transform","OrderCard","fromSymbol","fromDecimals","toSymbol","toDecimals","useOrderPendingState","last","canceling","ACTION_CANCEL_ORDER","pending","orderEncodedData","cancelOrder","creationAmount","explorerLink","getEtherscanLink","rateFromTo","rateToFrom","tooltipText","executionRateText","virtualRateFromTo","virtualRateToFrom","warn","status","onCancel","CUSTOM_DATA","rel","href","PastOrderCard","cancelled","executed","cancelledTxHash","executedTxHash","Date","updatedAt","toLocaleDateString","OrdersHistory","orders","setState","fetchUserPastOrders","usePastOrders","fetch","ORDER_GRAPH","method","headers","body","query","variables","owner","json","lsKey","getSavedOrders","raw","ls","fetchUserOrders","allOrders","openOrders","Orders","setOrders","setLoading","pendingOrders","useAllPendingOrders","pendingCancelOrders","useAllPendingCancelOrders","local","deps","o","useSavedOrders","graph","setTimeout","useGraphOrders","concat","find","Swap"],"mappings":"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","file":"static/js/9.b22a1dd8.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#AEAEAE\"\n});\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.7d32d2fa.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#343434\",\n  points: \"127.9611 0 125.1661 9.5 125.1661 285.168 127.9611 287.958 255.9231 212.32\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#8C8C8C\",\n  points: \"127.962 0 0 212.32 127.962 287.959 127.962 154.158\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#3C3C3B\",\n  points: \"127.9611 312.1866 126.3861 314.1066 126.3861 412.3056 127.9611 416.9066 255.9991 236.5866\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#8C8C8C\",\n  points: \"127.962 416.9052 127.962 312.1852 0 236.5852\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#141414\",\n  points: \"127.9611 287.9577 255.9211 212.3207 127.9611 154.1587\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#393939\",\n  points: \"0.0009 212.3208 127.9609 287.9578 127.9609 154.1588\"\n}));\n\nvar SvgEthereumLogo = function SvgEthereumLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"256px\",\n    height: \"417px\",\n    viewBox: \"0 0 256 417\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEthereumLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ethereum-logo.802c6eac.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from '../../utils'\n\nimport { ReactComponent as EthereumLogo } from '../../assets/images/ethereum-logo.svg'\n\nconst TOKEN_ICON_API = address =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\n    address\n  )}/logo.png`\nconst BAD_IMAGES = {}\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 1rem;\n`\n\nconst Emoji = styled.span`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nconst StyledEthereumLogo = styled(EthereumLogo)`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function TokenLogo({ address, size = '1rem', ...rest }) {\n  const [error, setError] = useState(false)\n\n  let path = ''\n  if (address === 'ETH') {\n    return <StyledEthereumLogo size={size} />\n  } else if (!error && !BAD_IMAGES[address]) {\n    path = TOKEN_ICON_API(address.toLowerCase())\n  } else {\n    return (\n      <Emoji {...rest} size={size}>\n        <span style={{ lineHeight: 0 }} role=\"img\" aria-label=\"Thinking\">\n          🌕\n        </span>\n      </Emoji>\n    )\n  }\n\n  return (\n    <Image\n      {...rest}\n      alt={address}\n      src={path}\n      size={size}\n      onError={() => {\n        BAD_IMAGES[address] = true\n        setError(true)\n      }}\n    />\n  )\n}\n","import React, { useState, useRef, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ethers } from 'ethers'\nimport { BigNumber } from '@uniswap/sdk'\nimport styled from 'styled-components'\nimport escapeStringRegex from 'escape-string-regexp'\nimport { darken } from 'polished'\nimport Tooltip from '@reach/tooltip'\nimport '@reach/tooltip/styles.css'\nimport { isMobile } from 'react-device-detect'\n\nimport { BorderlessInput } from '../../theme'\nimport { useTokenContract } from '../../hooks'\nimport { isAddress, calculateGasMargin, formatToUsd, formatTokenBalance, formatEthBalance } from '../../utils'\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport Modal from '../Modal'\nimport TokenLogo from '../TokenLogo'\nimport SearchIcon from '../../assets/images/magnifying-glass.svg'\nimport { useTransactionAdder, usePendingApproval } from '../../contexts/Transactions'\nimport { useTokenDetails, useAllTokenDetails } from '../../contexts/Tokens'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { transparentize } from 'polished'\nimport { Spinner } from '../../theme'\nimport Circle from '../../assets/images/circle-grey.svg'\nimport { useUSDPrice } from '../../contexts/Application'\n\nconst GAS_MARGIN = ethers.BigNumber.from(1000)\n\nconst SubCurrencySelect = styled.button`\n  ${({ theme }) => theme.flexRowNoWrap}\n  padding: 4px 50px 4px 15px;\n  margin-right: -40px;\n  line-height: 0;\n  height: 2rem;\n  align-items: center;\n  border-radius: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  background: ${({ theme }) => theme.zumthorBlue};\n  border: 1px solid ${({ theme }) => theme.royalGreen};\n  color: ${({ theme }) => theme.royalGreen};\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled(BorderlessInput)`\n  font-size: 1.5rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  background-color: ${({ theme }) => theme.inputBackground};\n  -moz-appearance: textfield;\n`\n\nconst StyledBorderlessInput = styled(BorderlessInput)`\n  min-height: 2.5rem;\n  flex-shrink: 0;\n  text-align: left;\n  padding-left: 1.6rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport const CurrencySelect = styled.button`\n  align-items: center;\n  font-size: 1rem;\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalGreen)};\n  height: 2rem;\n  border: 1px solid ${({ selected, theme }) => (selected ? theme.mercuryGray : theme.royalGreen)};\n  border-radius: 2.5rem;\n  background-color: #fafafa;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n\n  :hover {\n    border: 1px solid\n      ${({ selected, theme }) => (selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalGreen))};\n  }\n\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.1, theme.royalGreen)};\n  }\n`\n\nexport const Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.5rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalGreen)};\n  }\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst Container = styled.div`\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n  :focus-within {\n    border: 1px solid ${({ theme }) => theme.malibuGreen};\n  }\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.doveGray)};\n  }\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst ErrorSpan = styled.span`\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  :hover {\n    cursor: pointer;\n    color: ${({ error, theme }) => error && darken(0.1, theme.salmonRed)};\n  }\n`\n\nconst TokenModal = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  width: 100%;\n`\n\nconst ModalHeader = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 0px 0px 1rem;\n  height: 60px;\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.textColor};\n  }\n`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst SearchContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: flex-start;\n  padding: 0.5rem 1.5rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst TokenModalInfo = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  user-select: none;\n`\n\nconst TokenList = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst TokenModalRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  cursor: pointer;\n  user-select: none;\n\n  #symbol {\n    color: ${({ theme }) => theme.doveGrey};\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.tokenRowHover};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0.8rem 1rem;`}\n`\n\nconst TokenRowLeft = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items : center;\n`\n\nconst TokenSymbolGroup = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  margin-left: 1rem;\n`\n\nconst TokenFullName = styled.div`\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowBalance = styled.div`\n  font-size: 1rem;\n  line-height: 20px;\n`\n\nconst TokenRowUsd = styled.div`\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowRight = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: flex-end;\n`\n\nexport const StyledTokenName = styled.span`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n  color: ${({ theme }) => theme.chaliceGray};\n  opacity: 0.6;\n`\n\nexport default function CurrencyInputPanel({\n  onValueChange = () => {},\n  allBalances,\n  renderInput,\n  onCurrencySelected = () => {},\n  title,\n  description,\n  extraText,\n  extraTextClickHander = () => {},\n  errorMessage,\n  disableUnlock,\n  disableTokenSelect,\n  selectedTokenAddress = '',\n  showUnlock,\n  value,\n  showCurrencySelector = true\n}) {\n  const { t } = useTranslation()\n\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const tokenContract = useTokenContract(selectedTokenAddress)\n  const { exchangeAddress: selectedTokenExchangeAddress } = useTokenDetails(selectedTokenAddress)\n\n  const pendingApproval = usePendingApproval(selectedTokenAddress)\n\n  const addTransaction = useTransactionAdder()\n\n  const allTokens = useAllTokenDetails()\n\n  function renderUnlockButton() {\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'ETH' || !selectedTokenAddress) {\n      return null\n    } else {\n      if (!pendingApproval) {\n        return (\n          <SubCurrencySelect\n            onClick={async () => {\n              const estimatedGas = await tokenContract.estimate.approve(\n                selectedTokenExchangeAddress,\n                ethers.constants.MaxUint256\n              )\n              tokenContract\n                .approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256, {\n                  gasLimit: calculateGasMargin(estimatedGas, GAS_MARGIN)\n                })\n                .then(response => {\n                  addTransaction(response, { approval: selectedTokenAddress })\n                })\n            }}\n          >\n            {t('unlock')}\n          </SubCurrencySelect>\n        )\n      } else {\n        return <SubCurrencySelect>{t('pending')}</SubCurrencySelect>\n      }\n    }\n  }\n\n  function _renderInput() {\n    if (typeof renderInput === 'function') {\n      return renderInput()\n    }\n\n    return (\n      <InputRow>\n        <Input\n          type=\"number\"\n          min=\"0\"\n          error={!!errorMessage}\n          placeholder=\"0.0\"\n          step=\"0.000000000000000001\"\n          onChange={e => onValueChange(e.target.value)}\n          onKeyPress={e => {\n            const charCode = e.which ? e.which : e.keyCode\n\n            // Prevent 'minus' character\n            if (charCode === 45) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n          }}\n          value={value}\n        />\n        {renderUnlockButton()}\n        {showCurrencySelector ? (\n          <CurrencySelect\n            selected={!!selectedTokenAddress}\n            onClick={() => {\n              if (!disableTokenSelect) {\n                setModalIsOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {selectedTokenAddress ? <TokenLogo address={selectedTokenAddress} /> : null}\n              {\n                <StyledTokenName>\n                  {(allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol) || t('selectToken')}\n                </StyledTokenName>\n              }\n              {!disableTokenSelect && <StyledDropDown selected={!!selectedTokenAddress} />}\n            </Aligner>\n          </CurrencySelect>\n        ) : null}\n      </InputRow>\n    )\n  }\n\n  return (\n    <InputPanel>\n      <Container error={!!errorMessage}>\n        <LabelRow>\n          <LabelContainer>\n            <span>{title}</span> <span>{description}</span>\n          </LabelContainer>\n\n          <ErrorSpan\n            data-tip={'Enter max'}\n            error={!!errorMessage}\n            onClick={() => {\n              extraTextClickHander()\n            }}\n          >\n            <Tooltip\n              label=\"Enter Max\"\n              style={{\n                background: 'hsla(0, 0%, 0%, 0.75)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '24px',\n                padding: '0.5em 1em',\n                marginTop: '-64px'\n              }}\n            >\n              <span>{extraText}</span>\n            </Tooltip>\n          </ErrorSpan>\n        </LabelRow>\n        {_renderInput()}\n      </Container>\n      {!disableTokenSelect && (\n        <CurrencySelectModal\n          isOpen={modalIsOpen}\n          // isOpen={true}\n          onDismiss={() => {\n            setModalIsOpen(false)\n          }}\n          onTokenSelect={onCurrencySelected}\n          allBalances={allBalances}\n        />\n      )}\n    </InputPanel>\n  )\n}\n\nfunction CurrencySelectModal({ isOpen, onDismiss, onTokenSelect, allBalances }) {\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const { name } = useTokenDetails(searchQuery)\n\n  const allTokens = useAllTokenDetails()\n\n  // BigNumber.js instance\n  const ethPrice = useUSDPrice()\n\n  const _usdAmounts = Object.keys(allTokens).map(k => {\n    if (\n      ethPrice &&\n      allBalances &&\n      allBalances[k] &&\n      allBalances[k].ethRate &&\n      !allBalances[k].ethRate.isNaN() &&\n      allBalances[k].balance\n    ) {\n      const USDRate = ethPrice.times(allBalances[k].ethRate)\n      const balanceBigNumber = new BigNumber(allBalances[k].balance.toString())\n      const usdBalance = balanceBigNumber.times(USDRate).div(new BigNumber(10).pow(allTokens[k].decimals))\n      return usdBalance\n    } else {\n      return null\n    }\n  })\n  const usdAmounts =\n    _usdAmounts &&\n    Object.keys(allTokens).reduce(\n      (accumulator, currentValue, i) => Object.assign({ [currentValue]: _usdAmounts[i] }, accumulator),\n      {}\n    )\n\n  const tokenList = useMemo(() => {\n    return Object.keys(allTokens)\n      .filter(k => allTokens[k].symbol)\n      .sort((a, b) => {\n        const aSymbol = allTokens[a].symbol.toLowerCase()\n        const bSymbol = allTokens[b].symbol.toLowerCase()\n\n        if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\n          return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1\n        }\n\n        if (aSymbol === 'WETH'.toLowerCase() || bSymbol === 'WETH'.toLowerCase()) {\n          return aSymbol === bSymbol ? 0 : aSymbol === 'WETH'.toLowerCase() ? -1 : 1\n        }\n\n        if (allBalances) {\n          const aBalance = allBalances[a] ? allBalances[a].balance : null\n          const bBalance = allBalances[b] ? allBalances[b].balance : null\n\n          if (aBalance && !bBalance) {\n            return -1\n          } else if (!aBalance && bBalance) {\n            return 1\n          }\n\n          if (aBalance && aBalance) {\n            if (aBalance.gt(bBalance)) {\n              return -1\n            } else {\n              return 1\n            }\n          }\n        }\n\n        return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0\n      })\n      .map(k => {\n        let balance\n        let usdBalance\n        // only update if we have data\n        if (k === 'ETH' && allBalances && allBalances[k]) {\n          balance = formatEthBalance(allBalances[k].balance)\n          usdBalance = usdAmounts[k]\n        } else if (allBalances && allBalances[k]) {\n          balance = formatTokenBalance(allBalances[k].balance, allTokens[k].decimals)\n          usdBalance = usdAmounts[k]\n        }\n        return {\n          name: allTokens[k].name,\n          symbol: allTokens[k].symbol,\n          address: k,\n          balance: balance,\n          usdBalance: usdBalance\n        }\n      })\n  }, [allBalances, allTokens, usdAmounts])\n\n  const filteredTokenList = useMemo(() => {\n    return tokenList.filter(tokenEntry => {\n      // check the regex for each field\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\n        return (\n          typeof tokenEntry[tokenEntryKey] === 'string' &&\n          !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'))\n        )\n      })\n\n      return regexMatches.some(m => m)\n    })\n  }, [tokenList, searchQuery])\n\n  function _onTokenSelect(address) {\n    setSearchQuery('')\n    onTokenSelect(address)\n    onDismiss()\n  }\n\n  function renderTokenList() {\n    if (isAddress(searchQuery) && name === undefined) {\n      return <TokenModalInfo>Searching for Exchange...</TokenModalInfo>\n    }\n    if (!filteredTokenList.length) {\n      return <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\n    }\n\n    return filteredTokenList.map(({ address, symbol, name, balance, usdBalance }) => {\n      return (\n        <TokenModalRow key={address} onClick={() => _onTokenSelect(address)}>\n          <TokenRowLeft>\n            <TokenLogo address={address} size={'2rem'} />\n            <TokenSymbolGroup>\n              <span id=\"symbol\">{symbol}</span>\n              <TokenFullName>{name}</TokenFullName>\n            </TokenSymbolGroup>\n          </TokenRowLeft>\n          <TokenRowRight>\n            {balance ? (\n              <TokenRowBalance>{balance && (balance > 0 || balance === '<0.0001') ? balance : '-'}</TokenRowBalance>\n            ) : (\n              <SpinnerWrapper src={Circle} alt=\"loader\" />\n            )}\n            <TokenRowUsd>\n              {usdBalance ? (usdBalance.lt(0.01) ? '<$0.01' : '$' + formatToUsd(usdBalance)) : ''}\n            </TokenRowUsd>\n          </TokenRowRight>\n        </TokenModalRow>\n      )\n    })\n  }\n\n  // manage focus on modal show\n  const inputRef = useRef()\n\n  function onInput(event) {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }\n\n  function clearInputAndDismiss() {\n    setSearchQuery('')\n    onDismiss()\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={clearInputAndDismiss}\n      minHeight={60}\n      initialFocusRef={isMobile ? undefined : inputRef}\n    >\n      <TokenModal>\n        <ModalHeader>\n          <p>Select Token</p>\n          <CloseIcon onClick={clearInputAndDismiss}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n        </ModalHeader>\n        <SearchContainer>\n          <img src={SearchIcon} alt=\"search\" />\n          <StyledBorderlessInput\n            ref={inputRef}\n            type=\"text\"\n            placeholder={isMobile ? t('searchOrPasteMobile') : t('searchOrPaste')}\n            onChange={onInput}\n          />\n        </SearchContainer>\n        <TokenList>{renderTokenList()}</TokenList>\n      </TokenModal>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n  width: calc(100% - 1rem);\n  margin: 0 auto;\n  border-radius: 0.625rem;\n`\n\nconst PanelTop = styled.div`\n  content: '';\n  position: absolute;\n  top: -0.5rem;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst PanelBottom = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\n  return (\n    <Panel>\n      {hideTop || <PanelTop />}\n      {children}\n      {hideBottom || <PanelBottom />}\n    </Panel>\n  )\n}\n","import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React from 'react'\n\nconst SVGDiv = props => (\n  <svg version=\"1.1\" style={{ padding: '13px', width: '11px', height: '11px' }} {...props}>\n    <line x1=\"1\" y1=\"9\" x2=\"9\" y2=\"1\" strokeWidth=\"1\" />\n    <line x1=\"1\" y1=\"1\" x2=\"9\" y2=\"9\" strokeWidth=\"1\" />\n  </svg>\n)\n\nexport default SVGDiv\n","import React from 'react'\n\nconst SVGClose = props => (\n  <svg version=\"1.1\" style={{ padding: '13px', width: '11px', height: '11px' }} {...props}>\n    <line x1=\"1\" y1=\"9\" x2=\"9\" y2=\"1\" strokeWidth=\"1\" />\n  </svg>\n)\n\nexport default SVGClose\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React, useBlockNumber } from '../../hooks'\n\nimport { addMulticallListeners, removeMulticallListeners, parseCallKey, toCallKey } from './actions'\n\nfunction isMethodArg(x) {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x) {\n  return (\n    x === undefined || (Array.isArray(x) && x.every(y => isMethodArg(y) || (Array.isArray(y) && y.every(isMethodArg))))\n  )\n}\n\nconst INVALID_RESULT = { valid: false, blockNumber: undefined, data: undefined }\nconst INVALID_CALL_STATE = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(callResult, contractInterface, fragment, latestBlockNumber) {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ? blockNumber : 0) < latestBlockNumber\n  let result = undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result: result,\n    error: !success\n  }\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls, options) {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector(state => state.multicall.callResults)\n  const dispatch = useDispatch()\n\n  const serializedCallKeys = useMemo(() => {\n    try {\n      const res = calls\n        .filter(c => Boolean(c))\n        .map(toCallKey)\n        .sort()\n\n      return JSON.stringify(res ? res : [])\n    } catch (e) {\n      console.log('error ', e.message)\n      return undefined\n    }\n  }, [calls])\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    if (!serializedCallKeys) {\n      return\n    }\n    const callKeys = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return\n    const calls = callKeys.map(key => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options\n      })\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options\n        })\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map(call => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId] ? callResults[chainId][toCallKey(call)] : undefined\n        let data\n        if (result && result.data && result.data !== '0x') {\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result ? result.blockNumber : undefined }\n      }),\n    [callResults, calls, chainId]\n  )\n}\n\nexport function useMultipleContractSingleData(addresses, contractInterface, methodName, callInputs, options) {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment]\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map(address => {\n            return address && callData\n              ? {\n                  address,\n                  callData\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map(result => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n","import { Trade, TokenAmount, Pair, CurrencyAmount, Token, ETHER, WETH, JSBI } from 'uniswap-v2-sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\nimport { Interface } from '@ethersproject/abi'\nimport { parseUnits } from '@ethersproject/units'\n\nimport { BASES_TO_CHECK_TRADES_AGAINST } from '../constants'\nimport PAIR_ABI from '../constants/abis/pair.json'\nimport { useActiveWeb3React } from './index'\nimport { useTokenDetails } from '../contexts/Tokens'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\n\nexport const PairState = {\n  LOADING: 'LOADING',\n  NOT_EXISTS: 'NOT_EXISTS',\n  EXISTS: 'EXISTS',\n  INVALID: 'INVALID'\n}\n\nconst PAIR_INTERFACE = new Interface(PAIR_ABI)\n\nfunction useAllCommonPairs(currencyA, currencyB) {\n  const { chainId } = useActiveWeb3React()\n\n  const bases = chainId ? BASES_TO_CHECK_TRADES_AGAINST[chainId] : []\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const allPairCombinations = useMemo(\n    () => [\n      // the direct pair\n      [tokenA, tokenB],\n      // token A against all bases\n      ...bases.map(base => [tokenA, base]),\n      // token B against all bases\n      ...bases.map(base => [tokenB, base]),\n      // each base against all bases\n      ...flatMap(bases, base => bases.map(otherBase => [base, otherBase]))\n    ],\n    [tokenA, tokenB, bases]\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter(result => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address]\n              ? memo[curr.liquidityToken.address]\n              : curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  )\n}\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAddressIn, currencyValueIn, currencyAddressOut) {\n  const currencyIn = useTokenDetails(currencyAddressIn)\n  const currencyOutDetail = useTokenDetails(currencyAddressOut)\n  const currencyOut = currencyAddressOut && currencyOutDetail && currencyOutDetail.decimals\n    ? currencyAddressOut === 'ETH'\n      ? ETHER\n      : new Token(\n          currencyOutDetail.chainId,\n          currencyAddressOut,\n          currencyOutDetail.decimals,\n          currencyOutDetail.symbol,\n          currencyOutDetail.name\n        )\n    : undefined\n\n  const currencyInputAmount = tryParseAmount(\n    currencyValueIn,\n    currencyAddressIn\n      ? currencyAddressIn === 'ETH'\n        ? ETHER\n        : new Token(currencyIn.chainId, currencyAddressIn, currencyIn.decimals, currencyIn.symbol, currencyIn.name)\n      : undefined\n  )\n\n  const allowedPairs = useAllCommonPairs(currencyInputAmount ? currencyInputAmount.currency : undefined, currencyOut)\n\n  return useMemo(() => {\n    if (currencyInputAmount && currencyOut && allowedPairs.length > 0) {\n      try {\n        const tradeRes = Trade.bestTradeExactIn(allowedPairs, currencyInputAmount, currencyOut, {\n          maxHops: 3,\n          maxNumResults: 1\n        })[0]\n\n        return tradeRes ? tradeRes : null\n      } catch {}\n    }\n    return null\n  }, [allowedPairs, currencyInputAmount, currencyOut])\n}\n\nexport function usePairs(currencies) {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId)\n      ]),\n    [chainId, currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { _reserve0, _reserve1 } = reserves\n\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, _reserve0.toString()), new TokenAmount(token1, _reserve1.toString()))\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA, tokenB) {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n\nexport function wrappedCurrency(currency, chainId) {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value, currency) {\n  if (!value || !currency) {\n    return\n  }\n  try {\n    const typedValueParsed = parseUnits(value.toString(), currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.error(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return\n}\n","import { ethers } from 'ethers'\n\nexport function getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from '../Row'\nimport { AlertTriangle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { ButtonPrimary } from '../Button'\nimport { useActiveWeb3React } from '../../hooks'\nimport Modal from '../Modal'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst BottomSection = styled(Section)`\n  background-color: ${({ theme }) => theme.bg2};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nexport function ConfirmationModalContent({\n  title,\n  onDismiss,\n  message\n}) {\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={20}>\n            {title}\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        {message}\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorModal({ message, isOpen, onDismiss }) {\n  const { chainId } = useActiveWeb3React()\n\n  console.log(message);\n\n  if (!chainId) return null\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      <Wrapper>\n        <Section>\n          <RowBetween>\n            <Text fontWeight={500} fontSize={20}>\n              Error\n          </Text>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n          <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\n            <AlertTriangle color='#FD4040' style={{ strokeWidth: 1.5 }} size={64} />\n            <Text fontWeight={500} fontSize={16} color='#FD4040' style={{ textAlign: 'center', width: '85%' }}>\n              {message}\n            </Text>\n          </AutoColumn>\n        </Section>\n        <BottomSection gap=\"12px\">\n          <ButtonPrimary onClick={onDismiss}>Dismiss</ButtonPrimary>\n        </BottomSection>\n      </Wrapper>\n    </Modal>\n  )\n}\n\nexport default function TransactionConfirmationModal({\n  isOpen,\n  onDismiss,\n  content\n}) {\n  console.log(content())\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {(\n        content()\n      )}\n    </Modal>\n  )\n}","import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\nimport * as ls from 'local-storage'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../CurrencyInputPanel'\nimport OversizedPanel from '../OversizedPanel'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport SVGClose from '../../assets/svg/SVGClose'\nimport SVGDiv from '../../assets/svg/SVGDiv'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useAddressBalance } from '../../contexts/Balances'\nimport { useFetchAllBalances } from '../../contexts/AllBalances'\nimport { useTradeExactIn } from '../../hooks/trade'\nimport { getExchangeRate } from '../../utils/rate'\nimport { useGasPrice } from '../../contexts/GasPrice'\nimport { TransactionErrorModal } from '../TransactionConfirmationModal'\nimport { useSymphonyContract, useWETHGatewayContract } from '../../hooks'\nimport { ACTION_PLACE_ORDER, useTransactionAdder } from '../../contexts/Transactions'\nimport { amountFormatter, getERC20Contract, getTokenAllowance, getOrderId } from '../../utils'\nimport {\n  ETH_ADDRESS,\n  WETH_ADDRESSES,\n  SYMPHONY_ADDRESSES,\n  GENERIC_GAS_LIMIT_ORDER_EXECUTE,\n  ZERO_BYTES32,\n} from '../../constants'\n\nimport './ExchangePage.css'\n\n// Use to detach input from output\nlet inputValue\n\nconst INPUT = 0\nconst OUTPUT = 1\nconst RATE = 2\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// Denominated in bips\nconst SLIPPAGE_WARNING = '30' // [30+%\nconst EXECUTION_WARNING = '3' // [10+%\n\nconst RATE_OP_MULT = 'x'\nconst RATE_OP_DIV = '/'\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst WrappedArrowDown = ({ clickable, active, ...rest }) => <ArrowDown {...rest} />\nconst DownArrow = styled(WrappedArrowDown)`\n  color: ${({ theme, active }) => (active ? theme.royalGreen : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst WrappedRateIcon = ({ RateIconSVG, clickable, active, icon, ...rest }) => <RateIconSVG {...rest} />\n\nconst RateIcon = styled(WrappedRateIcon)`\n  stroke: ${({ theme, active }) => (active ? theme.royalGreen : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\n// ///\n// Local storage\n// ///\nconst LS_ORDERS = 'orders_'\n\nfunction lsKey(key, account, chainId) {\n  return key + account.toString() + chainId\n}\n\nfunction saveOrder(account, orderData, chainId) {\n  if (!account) return\n\n  const key = lsKey(LS_ORDERS, account, chainId)\n  const prev = ls.get(key)\n\n  if (prev === null) {\n    ls.set(key, [orderData])\n  } else {\n    if (prev.indexOf(orderData) === -1) {\n      prev.push(orderData)\n      ls.set(key, prev)\n    }\n  }\n}\n\n// ///\n// Helpers\n// ///\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'ETH') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'ETH') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\nfunction getInitialSwapState(outputCurrency) {\n  return {\n    independentValue: '', // this is a user input\n    dependentValue: '', // this is a calculated number\n    independentField: INPUT,\n    prevIndependentField: OUTPUT,\n    inputCurrency: 'ETH',\n    outputCurrency: outputCurrency ? outputCurrency : '',\n    rateOp: RATE_OP_MULT,\n    inputRateValue: '',\n    stoplossValue: '',\n  }\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: INPUT,\n        independentValue: '',\n        inputRateValue: '',\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency,\n        stoplossValue: '',\n      }\n    }\n    case 'FLIP_RATE_OP': {\n      const { rateOp, inputRateValue } = state\n\n      const rate = inputRateValue ? ethers.BigNumber.from(ethers.utils.parseUnits(inputRateValue, 18)) : undefined\n      const flipped = rate ? amountFormatter(flipRate(rate), 18, 18, false) : ''\n\n      return {\n        ...state,\n        inputRateValue: flipped,\n        rateOp: rateOp === RATE_OP_DIV ? RATE_OP_MULT : RATE_OP_DIV,\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : '',\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency,\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      const { dependentValue, independentValue, independentField, prevIndependentField, inputRateValue } = state\n\n      return {\n        ...state,\n        independentValue: field !== RATE ? value : independentValue,\n        dependentValue: Number(value) === Number(independentValue) ? dependentValue : '',\n        independentField: field,\n        inputRateValue: field === RATE ? value : inputRateValue,\n        prevIndependentField: independentField === field ? prevIndependentField : independentField,\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload === null ? inputValue : action.payload,\n      }\n    }\n    case 'UPDATE_STOPLOSS': {\n      return {\n        ...state,\n        stoplossValue: action.payload === null ? inputValue : !action.payload ? 0 : action.payload,\n      }\n    }\n    default: {\n      return getInitialSwapState()\n    }\n  }\n}\n\nfunction applyExchangeRateTo(inputValue, exchangeRate, inputDecimals, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      exchangeRate &&\n      (inputDecimals || inputDecimals === 0) &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(exchangeRate)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      } else {\n        return exchangeRate\n          .mul(inputValue)\n          .div(factor)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction exchangeRateDiff(exchangeRateA, exchangeRateB) {\n  try {\n    if (exchangeRateA && exchangeRateB) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n      const deltaRaw = factor.mul(exchangeRateA).div(exchangeRateB)\n\n      if (false && deltaRaw < factor) {\n        return factor.sub(deltaRaw)\n      } else {\n        return deltaRaw.sub(factor)\n      }\n    }\n  } catch {}\n}\n\nfunction flipRate(rate) {\n  try {\n    if (rate) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n      return factor.mul(factor).div(rate)\n    }\n  } catch {}\n}\n\nfunction safeParseUnits(number, units) {\n  try {\n    return ethers.utils.parseUnits(number, units)\n  } catch {\n    const margin = units * 8\n    const decimals = ethers.utils.parseUnits(number, margin)\n    return decimals.div(ethers.BigNumber.from(10).pow(margin - units))\n  }\n}\n\nexport default function ExchangePage({ initialCurrency }) {\n  const { t } = useTranslation()\n  const { account, library, chainId } = useWeb3React()\n\n  let [showConfirm, setShowConfirm] = useState(false)\n  let [orderErrorMessage, setOrderErrorMessage] = useState('')\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(swapStateReducer, initialCurrency, getInitialSwapState)\n\n  let {\n    independentValue,\n    independentField,\n    inputCurrency,\n    outputCurrency,\n    rateOp,\n    inputRateValue,\n    stoplossValue,\n  } = swapState\n\n  const symphonyContract = useSymphonyContract()\n  const wethGatewayContract = useWETHGatewayContract()\n  const [inputError, setInputError] = useState()\n\n  const addTransaction = useTransactionAdder()\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange address for each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals } = useTokenDetails(inputCurrency)\n  const { symbol: outputSymbol, decimals: outputDecimals } = useTokenDetails(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT || independentField === RATE ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : inputValue\n  const inputValueFormatted =\n    independentField === INPUT ? independentValue : amountFormatter(inputValue, inputDecimals, inputDecimals, false)\n\n  let outputValueFormatted\n  let outputValueParsed\n  let rateRaw\n\n  const bestTradeExactIn = useTradeExactIn(\n    inputCurrency,\n    independentField === INPUT ? independentValue : inputValueFormatted,\n    outputCurrency\n  )\n\n  if (bestTradeExactIn) {\n    inputValue = ethers.BigNumber.from(ethers.utils.parseUnits(bestTradeExactIn.inputAmount.toExact(), inputDecimals))\n  } else if (independentField === INPUT && independentValue) {\n    inputValue = ethers.BigNumber.from(ethers.utils.parseUnits(independentValue, inputDecimals))\n  }\n\n  switch (independentField) {\n    case OUTPUT:\n      outputValueParsed = independentValueParsed\n      outputValueFormatted = independentValue\n      rateRaw = getExchangeRate(\n        inputValueParsed,\n        inputDecimals,\n        outputValueParsed,\n        outputDecimals,\n        rateOp === RATE_OP_DIV\n      )\n      break\n    case RATE:\n      if (!inputRateValue || Number(inputRateValue) === 0) {\n        outputValueParsed = ''\n        outputValueFormatted = ''\n      } else {\n        rateRaw = safeParseUnits(inputRateValue, 18)\n        outputValueParsed = applyExchangeRateTo(\n          inputValueParsed,\n          rateRaw,\n          inputDecimals,\n          outputDecimals,\n          rateOp === RATE_OP_DIV\n        )\n        outputValueFormatted = amountFormatter(\n          outputValueParsed,\n          dependentDecimals,\n          Math.min(4, dependentDecimals),\n          false\n        )\n      }\n      break\n    case INPUT:\n      outputValueParsed = bestTradeExactIn\n        ? ethers.utils.parseUnits(bestTradeExactIn.outputAmount.toExact(), dependentDecimals)\n        : null\n      outputValueFormatted = bestTradeExactIn ? bestTradeExactIn.outputAmount.toSignificant(6) : ''\n      stoplossValue = stoplossValue !== '' ? stoplossValue : outputValueFormatted\n      rateRaw = getExchangeRate(\n        inputValueParsed,\n        inputDecimals,\n        outputValueParsed,\n        outputDecimals,\n        rateOp === RATE_OP_DIV\n      )\n      break\n    default:\n      break\n  }\n\n  // rate info\n  const rateFormatted = independentField === RATE ? inputRateValue : amountFormatter(rateRaw, 18, 4, false)\n  const inverseRateInputSymbol = rateOp === RATE_OP_DIV ? inputSymbol : outputSymbol\n  const inverseRateOutputSymbol = rateOp === RATE_OP_DIV ? outputSymbol : inputSymbol\n  const inverseRate = flipRate(rateRaw)\n\n  // load required gas\n  const gasPrice = useGasPrice()\n  const gasLimit = GENERIC_GAS_LIMIT_ORDER_EXECUTE\n  const requiredGas = gasPrice?.mul(gasLimit)\n\n  const gasInInputTokens = useTradeExactIn('ETH', amountFormatter(requiredGas, 18, 18), inputCurrency)\n\n  let usedInput\n  if (inputSymbol === 'ETH') {\n    usedInput = requiredGas\n  } else if (gasInInputTokens) {\n    usedInput = ethers.utils.parseUnits(gasInInputTokens.outputAmount.toExact(), inputDecimals)\n  }\n\n  const realInputValue = usedInput && inputValueParsed?.sub(usedInput)\n  const executionRate =\n    realInputValue &&\n    getExchangeRate(realInputValue, inputDecimals, outputValueParsed, outputDecimals, rateOp === RATE_OP_DIV)\n\n  const limitSlippage = ethers.BigNumber.from(SLIPPAGE_WARNING).mul(\n    ethers.BigNumber.from(10).pow(ethers.BigNumber.from(16))\n  )\n\n  const limitExecution = ethers.BigNumber.from(EXECUTION_WARNING).mul(\n    ethers.BigNumber.from(10).pow(ethers.BigNumber.from(16))\n  )\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n\n  const executionRateDelta = executionRate && exchangeRateDiff(executionRate, rateRaw)\n  const executionRateNegative = executionRate?.lt(ethers.constants.Zero)\n  const executionRateWarning = executionRateNegative || executionRateDelta?.abs()?.gt(limitExecution)\n\n  useEffect(() => {\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // validate input balance\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = inputValueParsed\n    if (inputBalance && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n    }\n  }, [inputBalance, inputCurrency, t, inputValueParsed])\n\n  // calculate dependent value\n  useEffect(() => {\n    if (independentField === OUTPUT || independentField === RATE) {\n      return () => {\n        dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: null })\n      }\n    }\n  }, [independentField])\n\n  const [inverted, setInverted] = useState(false)\n\n  const marketRate = getExchangeRate(\n    inputValueParsed,\n    inputDecimals,\n    bestTradeExactIn ? ethers.utils.parseUnits(bestTradeExactIn.outputAmount.toExact(), outputDecimals) : null,\n    outputDecimals,\n    rateOp === RATE_OP_DIV\n  )\n\n  const exchangeRate = marketRate\n  const exchangeRateInverted = flipRate(exchangeRate)\n\n  const rateDelta =\n    rateOp === RATE_OP_DIV\n      ? exchangeRateDiff(inverseRate, exchangeRateInverted)\n      : exchangeRateDiff(rateRaw, exchangeRate)\n\n  const highSlippageWarning = rateDelta && rateDelta.lt(ethers.BigNumber.from(0).sub(limitSlippage))\n  const rateDeltaFormatted = amountFormatter(rateDelta, 16, 2, true)\n\n  const isValid = outputValueParsed && !inputError && !independentError\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  async function onPlace() {\n    let fromCurrency, toCurrency, inputAmount, minimumReturn, stoplossAmount\n    ReactGA.event({\n      category: 'place',\n      action: 'place',\n    })\n\n    inputAmount = inputValueParsed\n    minimumReturn = outputValueParsed\n    stoplossAmount = stoplossValue\n      ? ethers.BigNumber.from(ethers.utils.parseUnits(stoplossValue, outputDecimals))\n      : ethers.BigNumber.from(0)\n\n    if (swapType === ETH_TO_TOKEN) {\n      fromCurrency = WETH_ADDRESSES[chainId]\n      toCurrency = outputCurrency\n    } else if (swapType === TOKEN_TO_ETH) {\n      fromCurrency = inputCurrency\n      toCurrency = ETH_ADDRESS\n    } else if (swapType === TOKEN_TO_TOKEN) {\n      fromCurrency = inputCurrency\n      toCurrency = outputCurrency\n    }\n\n    try {\n      let order = {\n        recipient: account.toLowerCase(),\n        inputToken: fromCurrency.toLowerCase(),\n        outputToken: toCurrency.toLowerCase(),\n        inputAmount: inputAmount,\n        minReturnAmount: minimumReturn,\n        stoplossAmount: stoplossAmount,\n      }\n\n      const orderId = getOrderId(order)\n      const orderHash = await symphonyContract.orderHash(orderId)\n\n      if (orderHash === ZERO_BYTES32) {\n        let res\n        if (swapType === ETH_TO_TOKEN) {\n          res = await wethGatewayContract.createEthOrder(\n            account.toLowerCase(),\n            toCurrency.toLowerCase(),\n            minimumReturn,\n            stoplossAmount,\n            { value: inputAmount }\n          )\n        } else {\n          const allowance = await getTokenAllowance(\n            account.toLowerCase(),\n            fromCurrency,\n            SYMPHONY_ADDRESSES[chainId],\n            library\n          )\n\n          if (allowance.lt(inputAmount)) {\n            const tokenContract = await getERC20Contract(fromCurrency, library, account)\n\n            const tx = await tokenContract.approve(SYMPHONY_ADDRESSES[chainId], ethers.constants.MaxUint256)\n            await tx.wait()\n          }\n\n          res = await symphonyContract.createOrder(\n            account.toLowerCase(),\n            fromCurrency.toLowerCase(),\n            toCurrency.toLowerCase(),\n            inputAmount,\n            minimumReturn,\n            stoplossAmount\n          )\n        }\n\n        if (res.hash) {\n          order.orderId = orderId\n          // saveOrder(account, order, chainId)\n          addTransaction(res, { action: ACTION_PLACE_ORDER, order: order })\n        }\n      } else {\n        setOrderErrorMessage('There is already an order with same order id')\n        setShowConfirm(true)\n      }\n    } catch (e) {\n      console.log('Error on place order', e.message)\n      setOrderErrorMessage(e.message)\n      setShowConfirm(true)\n    }\n  }\n\n  const [customSlippageError] = useState('')\n\n  const allBalances = useFetchAllBalances()\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('input')}\n        allBalances={allBalances}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: { value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false), field: INPUT },\n              })\n            }\n          }\n        }}\n        onCurrencySelected={(inputCurrency) => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: inputCurrency, field: INPUT } })\n        }}\n        onValueChange={(inputValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValue, field: INPUT } })\n        }}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n\n      <OversizedPanel>\n        <DownArrowBackground>\n          <RateIcon\n            RateIconSVG={rateOp === RATE_OP_MULT ? SVGClose : SVGDiv}\n            icon={rateOp}\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_RATE_OP' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n\n      <CurrencyInputPanel\n        title={t('rate')}\n        showCurrencySelector={false}\n        extraText={\n          inverseRateInputSymbol && inverseRate && inverseRateOutputSymbol\n            ? `1 ${inverseRateInputSymbol} = ${amountFormatter(inverseRate, 18, 4, false)} ${inverseRateOutputSymbol}`\n            : '-'\n        }\n        extraTextClickHander={() => {\n          dispatchSwapState({ type: 'FLIP_RATE_OP' })\n        }}\n        value={rateFormatted || ''}\n        onValueChange={(rateValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: rateValue, field: RATE } })\n        }}\n      />\n\n      <OversizedPanel>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted((inverted) => !inverted)\n          }}\n        >\n          <ExchangeRate>\n            Execution rate at {gasPrice ? amountFormatter(gasPrice, 9, 0, false) : '...'} GWEI\n          </ExchangeRate>\n          {executionRateNegative ? (\n            'Never executes'\n          ) : rateOp !== RATE_OP_DIV ? (\n            <span>\n              {executionRate\n                ? `1 ${inputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : rateOp !== RATE_OP_DIV ? (\n            <span>\n              {executionRate\n                ? `1 ${inputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {executionRate\n                ? `1 ${outputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n\n      <CurrencyInputPanel\n        title={t('output')}\n        allBalances={allBalances}\n        description={estimatedText}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        onCurrencySelected={(outputCurrency) => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: outputCurrency, field: OUTPUT } })\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValueFormatted, field: INPUT } })\n        }}\n        onValueChange={(outputValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n\n      <div className=\"stop-loss\">\n        <div className=\"sc-cQFLBn gigTmf\"></div>\n        <div className=\"sc-gojNiO OVrhN\"></div>\n      </div>\n\n      <CurrencyInputPanel\n        title={t('Stop Loss')}\n        showCurrencySelector={false}\n        onValueChange={(outputValue) => {\n          dispatchSwapState({ type: 'UPDATE_STOPLOSS', payload: outputValue })\n        }}\n        value={stoplossValue}\n        disableUnlock\n      >\n        {' '}\n      </CurrencyInputPanel>\n\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted((inverted) => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n\n      <Flex>\n        <Button\n          disabled={!account || !isValid || customSlippageError === 'invalid'}\n          onClick={onPlace}\n          warning={highSlippageWarning || executionRateWarning || customSlippageError === 'warning'}\n        >\n          {customSlippageError === 'warning' ? t('placeAnyway') : t('place')}\n        </Button>\n      </Flex>\n      {rateDeltaFormatted && (\n        <div className=\"market-delta-info\">\n          {rateDeltaFormatted.startsWith('-')\n            ? t('placeBelow', { rateDelta: rateDeltaFormatted })\n            : t('placeAbove', { rateDelta: rateDeltaFormatted })}\n        </div>\n      )}\n      {highSlippageWarning && (\n        <div className=\"slippage-warning\">\n          <span role=\"img\" aria-label=\"warning\">\n            ⚠️\n          </span>\n          {t('highSlippageWarning')}\n        </div>\n      )}\n      {executionRateWarning && (\n        <div className=\"slippage-warning\">\n          <span role=\"img\" aria-label=\"warning\">\n            ⚠️\n          </span>\n          Order too small, extreme execution rate\n        </div>\n      )}\n\n      {orderErrorMessage ? (\n        <TransactionErrorModal\n          isOpen={showConfirm}\n          onDismiss={() => {\n            setOrderErrorMessage('')\n            setShowConfirm(false)\n          }}\n          message={orderErrorMessage}\n        />\n      ) : null}\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\nimport Tooltip from '@reach/tooltip'\nimport { getEtherscanLink } from '../../utils'\nimport { CurrencySelect, Aligner, StyledTokenName } from '../CurrencyInputPanel'\nimport TokenLogo from '../TokenLogo'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter } from '../../utils'\nimport { useSymphonyContract } from '../../hooks'\nimport { useTradeExactIn } from '../../hooks/trade'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useGasPrice } from '../../contexts/GasPrice'\nimport {\n  ACTION_PLACE_ORDER,\n  ACTION_CANCEL_ORDER,\n  useTransactionAdder,\n  useOrderPendingState\n} from '../../contexts/Transactions'\nimport { ETH_ADDRESS, GENERIC_GAS_LIMIT_ORDER_EXECUTE } from '../../constants'\nimport { getExchangeRate } from '../../utils/rate'\n\nimport './OrderCard.css'\n\nconst CancelButton = styled.div`\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.textColor)};\n  padding: 0px 6px 0px 6px;\n  font-size: 0.85rem;\n`\n\nconst Order = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-flow: column nowrap;\n  -ms-flex-flow: column nowrap;\n  flex-flow: column nowrap;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);\n  position: relative;\n  border-radius: 1.25rem;\n  z-index: 1;\n  padding: 20px;\n  margin-bottom: 40px;\n  border: ${({ theme }) => `1px solid ${theme.mercuryGray}`};\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`\nconst WrappedArrowRight = ({ clickable, active, ...rest }) => <ArrowDown {...rest} transform=\"rotate(-90)\" />\n\nconst RightArrow = styled(WrappedArrowRight)`\n  color: ${({ theme }) => theme.royalGreen};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n`\n\nexport function OrderCard(props) {\n  const { t } = useTranslation()\n  const { chainId } = useWeb3React()\n\n  const order = props.data\n\n  const inputToken = order.inputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.inputToken)\n  const outputToken =\n    order.outputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.outputToken)\n\n  const { symbol: fromSymbol, decimals: fromDecimals } = useTokenDetails(inputToken)\n  const { symbol: toSymbol, decimals: toDecimals } = useTokenDetails(outputToken)\n  const { state, last } = useOrderPendingState(order)\n\n  const canceling = state === ACTION_CANCEL_ORDER\n  const pending = state === ACTION_PLACE_ORDER\n\n  const symphonyContract = useSymphonyContract()\n  const addTransaction = useTransactionAdder()\n\n  async function onCancel(order, pending) {\n    const { orderId, orderEncodedData } = order\n    symphonyContract\n      .cancelOrder(\n        orderId,\n        orderEncodedData,\n        {\n          gasLimit: pending ? 400000 : undefined\n        }\n      )\n      .then(response => {\n        addTransaction(response, { action: ACTION_CANCEL_ORDER, order: order })\n      });\n  }\n\n  const inputAmount = ethers.BigNumber.from(\n    order.inputAmount !== '0' || !order.creationAmount ? order.inputAmount : order.creationAmount\n  )\n  const minReturnAmount = ethers.BigNumber.from(order.minReturnAmount)\n  const stoplossAmount = ethers.BigNumber.from(order.stoplossAmount)\n\n  const explorerLink = last ? getEtherscanLink(chainId, last.response.hash, 'transaction') : undefined\n\n  const rateFromTo = getExchangeRate(inputAmount, fromDecimals, minReturnAmount, toDecimals, false)\n  const rateToFrom = getExchangeRate(inputAmount, fromDecimals, minReturnAmount, toDecimals, true)\n\n  const gasPrice = useGasPrice()\n  const gasLimit = GENERIC_GAS_LIMIT_ORDER_EXECUTE\n  const requiredGas = gasPrice?.mul(gasLimit)\n\n  const gasInInputTokens = useTradeExactIn('ETH', amountFormatter(requiredGas, 18, 18), inputToken)\n\n  let tooltipText = ''\n  let executionRateText = ''\n\n  try {\n    const [virtualRateFromTo, virtualRateToFrom] = useMemo(() => {\n      if (!gasPrice) return [undefined, undefined]\n\n      let usedInput\n\n      try {\n        if (inputToken === 'ETH') {\n          usedInput = requiredGas\n        } else if (!gasInInputTokens || !requiredGas) {\n          return [undefined, undefined]\n        } else {\n          usedInput = ethers.utils.parseUnits(gasInInputTokens.outputAmount.toExact(), fromDecimals)\n        }\n\n        return [\n          getExchangeRate(inputAmount.sub(usedInput), fromDecimals, minReturnAmount, toDecimals, false),\n          getExchangeRate(inputAmount.sub(usedInput), fromDecimals, minReturnAmount, toDecimals, true)\n        ]\n      } catch {\n        return [undefined, undefined]\n      }\n    }, [fromDecimals, inputAmount, minReturnAmount, requiredGas, toDecimals, inputToken, gasInInputTokens, gasPrice])\n\n    if (virtualRateFromTo?.gt(ethers.constants.Zero)) {\n      executionRateText = `Execution rate: ${virtualRateFromTo ? amountFormatter(virtualRateFromTo, 18, 3) : '...'\n        } ${fromSymbol}/${toSymbol} -\n        ${virtualRateToFrom ? amountFormatter(virtualRateToFrom, 18, 3) : '...'} ${toSymbol}/${fromSymbol}* `\n    } else if (virtualRateFromTo) {\n      executionRateText = 'Execution rate: never executes'\n    } else {\n      executionRateText = ''\n    }\n\n    tooltipText = `Required rate to execute order assuming gas price of ${gasPrice ? amountFormatter(gasPrice, 9, 2) : '...'\n      } GWEI`\n  } catch (e) {\n    console.warn('Error computing virtual rate', e)\n  }\n  return (\n    <Order className={`order ${order.status}`}>\n      <div className=\"tokens\">\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={inputToken} />}\n            {<StyledTokenName>{fromSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Aligner>\n          <RightArrow transform=\"rotate(-90)\" />\n        </Aligner>\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={outputToken} />}\n            {<StyledTokenName>{toSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Spacer />\n        <CurrencySelect\n          selected={true}\n          disabled={canceling}\n          onClick={() => onCancel(order, pending)}\n        >\n          <CancelButton>{\n            canceling &&\n              last &&\n              last.response.CUSTOM_DATA.order.orderId === order.orderId\n              ? 'Cancelling ...'\n              : t('cancel')}\n          </CancelButton>\n        </CurrencySelect>\n      </div>{' '}\n      <p>\n        {`Sell: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n      </p>\n      <p>\n        {`Receive: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n      </p>\n      <p>\n        {`Stoploss: ${amountFormatter(stoplossAmount, toDecimals, 6)}`} {toSymbol}\n      </p>\n      <p>\n        {`Rate: ${amountFormatter(rateFromTo, 18, 6)}`} {fromSymbol}/{toSymbol} - {amountFormatter(rateToFrom, 18, 6)}{' '}\n        {toSymbol}/{fromSymbol}\n      </p>\n      <Tooltip\n        label={tooltipText}\n        style={{\n          background: 'hsla(0, 0%, 0%, 0.75)',\n          color: 'white',\n          border: 'none',\n          borderRadius: '24px',\n          padding: '0.5em 1em',\n          marginTop: '-64px'\n        }}\n      >\n        <p>{executionRateText}</p>\n      </Tooltip>\n      <p>\n        {last &&\n          last.response.CUSTOM_DATA.order.orderId === order.orderId\n          && (\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n              Pending transaction...\n            </a>\n          )}\n      </p>\n    </Order>\n  )\n}\n","import React from 'react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { getEtherscanLink } from '../../utils'\nimport { CurrencySelect, Aligner, StyledTokenName } from '../CurrencyInputPanel'\nimport TokenLogo from '../TokenLogo'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter } from '../../utils'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { ETH_ADDRESS } from '../../constants'\n\nimport './OrderCard.css'\n\nconst Order = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-flow: column nowrap;\n  -ms-flex-flow: column nowrap;\n  flex-flow: column nowrap;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);\n  position: relative;\n  border-radius: 1.25rem;\n  z-index: 1;\n  padding: 20px;\n  margin-bottom: 40px;\n  border: ${({ theme }) => `1px solid ${theme.mercuryGray}`};\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`\nconst WrappedArrowRight = ({ clickable, active, ...rest }) => <ArrowDown {...rest} transform=\"rotate(-90)\" />\n\nconst RightArrow = styled(WrappedArrowRight)`\n  color: ${({ theme }) => theme.royalGreen};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n`\n\nexport function PastOrderCard(props) {\n  const { chainId } = useWeb3React()\n\n  const order = props.data\n\n  const inputToken = order.inputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.inputToken)\n  const outputToken =\n    order.outputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.outputToken)\n\n  const { symbol: fromSymbol, decimals: fromDecimals } = useTokenDetails(inputToken)\n  const { symbol: toSymbol, decimals: toDecimals } = useTokenDetails(outputToken)\n\n  const cancelled = order.status === 'CANCELLED'\n  const executed = order.status === 'EXECUTED'\n  // const bought = ethers.BigNumber.from(executed ? order.bought : 0)\n  const inputAmount = ethers.BigNumber.from(order.inputAmount)\n  const minReturnAmount = ethers.BigNumber.from(order.minReturnAmount)\n\n  const explorerLink = getEtherscanLink(\n    chainId,\n    cancelled ? order.cancelledTxHash : order.executedTxHash,\n    'transaction'\n  )\n\n  return (\n    <Order className={`order ${order.status}`}>\n      <div className=\"tokens\">\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={inputToken} />}\n            {<StyledTokenName>{fromSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Aligner>\n          <RightArrow transform=\"rotate(-90)\" />\n        </Aligner>\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={outputToken} />}\n            {<StyledTokenName>{toSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Spacer />\n      </div>\n      {executed && (\n        <>\n          <p>\n            {`Sold: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n          </p>\n          {/* <p>\n            {`Expected: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n          </p>\n          <p>\n            {`Received: ${amountFormatter(bought, toDecimals, 6)}`} {toSymbol}\n          </p> */}\n          <p>{`Date: ${new Date(order.updatedAt * 1000).toLocaleDateString()}`}</p>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n            Executed\n          </a>\n        </>\n      )}\n      {cancelled && (\n        <>\n          <p>\n            {`Sell: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n          </p>\n          <p>\n            {`Expected: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n          </p>\n          <p>{`Date: ${new Date(order.updatedAt * 1000).toLocaleDateString()}`}</p>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n            Cancelled\n          </a>\n        </>\n      )}\n    </Order>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { PastOrderCard } from '../PastOrderCard'\nimport { isAddress } from '../../utils'\nimport { ORDER_GRAPH } from '../../constants'\n\nexport function OrdersHistory() {\n  const { account, chainId } = useWeb3React()\n  const orders = usePastOrders(account, chainId)\n  return orders.length > 0 ? (\n    <>\n      <p style={{ marginTop: '40px', fontSize: '24px' }}>History</p>\n      {orders.map(order => (\n        <PastOrderCard key={order.id} data={order} />\n      ))}\n    </>\n  ) : null\n}\n\nfunction usePastOrders(account, chainId) {\n  const [state, setState] = useState([])\n\n  useEffect(() => {\n    if (account && isAddress(account)) {\n      fetchUserPastOrders(account, chainId).then(orders => {\n        setState(orders)\n      })\n    }\n  }, [account, chainId])\n\n  return state\n}\n\nasync function fetchUserPastOrders(account, chainId) {\n  const query = `\n  query GetOrdersByOwner($owner: String) {\n    orders(where:{recipient:$owner,status_not:ACTIVE}) {\n      id\n      inputToken\n      outputToken\n      inputAmount\n      minReturnAmount\n      stoplossAmount\n      status\n      updatedAt\n      executedTxHash\n      cancelledTxHash\n    }\n  }`\n  try {\n    const res = await fetch(ORDER_GRAPH[chainId], {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query, variables: { owner: account.toLowerCase() } })\n    })\n\n    const { data } = await res.json()\n    return data.orders\n  } catch (e) {\n    console.warn('Error loading orders from TheGraph', e)\n    return []\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\nimport * as ls from 'local-storage'\nimport styled from 'styled-components'\n\nimport { isAddress } from '../../utils'\nimport { OrderCard } from '../OrderCard'\nimport Circle from '../../assets/images/circle.svg'\nimport { useSymphonyContract } from '../../hooks'\nimport { OrdersHistory } from '../OrdersHistory'\nimport { Spinner } from '../../theme'\nimport { useAllPendingOrders, useAllPendingCancelOrders } from '../../contexts/Transactions'\nimport { ORDER_GRAPH } from '../../constants'\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\n// ///\n// Local storage\n// ///\nconst LS_ORDERS = 'orders_'\n\nfunction lsKey(key, account, chainId) {\n  return key + account.toString() + chainId\n}\n\nfunction getSavedOrders(account, chainId) {\n  if (!account) return []\n\n  console.log('Loading saved orders from storage location', account, lsKey(LS_ORDERS, account, chainId))\n  const raw = ls.get(lsKey(LS_ORDERS, account, chainId))\n  return raw == null ? [] : raw\n}\n\nasync function fetchUserOrders(account, chainId) {\n  const query = `\n  query GetOrdersByOwner($owner: String) {\n    orders(where:{recipient:$owner,status:ACTIVE}) {\n      id\n      orderId\n      recipient {\n        id\n      }\n      inputToken\n      outputToken\n      inputAmount\n      minReturnAmount\n      stoplossAmount\n      inputTokenSymbol\n      outputTokenSymbol\n      decodedInputAmount\n      decodedMinReturnAmount\n      decodedStoplossAmount\n      orderEncodedData\n      shares\n      createdAtBlock\n    }\n  }`\n  try {\n    const res = await fetch(ORDER_GRAPH[chainId], {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query, variables: { owner: account.toLowerCase() } }),\n    })\n\n    const { data } = await res.json()\n\n    return {\n      allOrders: [],\n      openOrders: data.orders,\n    }\n  } catch (e) {\n    console.warn('Error loading orders from TheGraph', e)\n    return {\n      allOrders: [],\n      openOrders: [],\n    }\n  }\n}\n\nfunction useGraphOrders(account, chainId, deps = []) {\n  const [state, setState] = useState({ openOrders: [], allOrders: [] })\n\n  useEffect(() => {\n    console.log(`Requesting load orders from the graph`)\n    if (account && isAddress(account)) {\n      setTimeout(() => {\n        fetchUserOrders(account, chainId).then((orders) => {\n          console.log(`Fetched ${orders.allOrders.length} ${orders.openOrders.length} orders from the graph`)\n          setState(orders)\n        })\n      }, 4000)\n    }\n    // eslint-disable-next-line\n  }, [...deps, account, chainId])\n\n  return state\n}\n\nfunction useSavedOrders(account, chainId, symphonyContract, deps = []) {\n  const [state, setState] = useState({ allOrders: [], openOrders: [] })\n\n  useEffect(() => {\n    console.log(`Requesting load orders from storage`)\n    if (isAddress(account)) {\n      const allOrders = getSavedOrders(account, chainId)\n      console.log(`Loaded ${allOrders.length} orders from local storage`)\n      if (allOrders.length > 0) {\n        setState({\n          allOrders: allOrders,\n          openOrders: allOrders.filter((o) => o.inputAmount !== '0'),\n        })\n      }\n    }\n    // eslint-disable-next-line\n  }, [...deps, account, chainId, symphonyContract])\n\n  return state\n}\n\nexport default function Orders() {\n  const { t } = useTranslation()\n  const { account, chainId } = useWeb3React()\n  const symphonyContract = useSymphonyContract()\n  const [orders, setOrders] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(!account)\n  }, [account])\n\n  const pendingOrders = useAllPendingOrders()\n  const pendingCancelOrders = useAllPendingCancelOrders()\n\n  // Get locally saved orders and the graph orders\n  const local = useSavedOrders(account, chainId, symphonyContract, [pendingOrders.length, pendingCancelOrders.length])\n\n  // TODO: Remove deps if necessary\n  const graph = useGraphOrders(account, chainId, [pendingOrders.length, pendingCancelOrders.length])\n\n  // Define orders to show as openOrders + pending orders\n  useEffect(() => {\n    // Aggregate graph and local orders, local orders have priority\n    const allOrders = local.allOrders.concat(\n      graph.allOrders.filter((o) => !local.allOrders.find((c) => c.orderId === o.orderId))\n    )\n    const openOrders = local.openOrders.concat(\n      graph.openOrders.filter((o) => !local.allOrders.find((c) => c.orderId === o.orderId))\n    )\n\n    setOrders(openOrders.concat(allOrders.filter((o) => pendingOrders.find((p) => p.orderId === o.orderId))))\n\n    // eslint-disable-next-line\n  }, [\n    local.allOrders.length,\n    local.openOrders.length,\n    graph.allOrders.length,\n    graph.openOrders.length,\n    pendingOrders.length,\n  ])\n\n  return (\n    <>\n      {account && (\n        <>\n          <>\n            <p className=\"orders-title\">{`${t('Orders')} ${orders.length > 0 ? `(${orders.length})` : ''}`}</p>\n            {loading && (\n              <>\n                <SpinnerWrapper src={Circle} alt=\"loader\" /> Loading ...\n                <br />\n                <br />\n              </>\n            )}\n            {orders.length === 0 && !loading && <p>{t('noOpenOrders')}</p>}\n            {\n              <div>\n                {orders.map((order) => (\n                  <OrderCard key={order.orderId} data={order} />\n                ))}\n              </div>\n            }\n          </>\n          <OrdersHistory />\n        </>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport ExchangePage from '../../components/ExchangePage'\nimport Orders from '../../components/Orders'\n\nexport default function Swap({ initialCurrency }) {\n  return <>\n    <ExchangePage initialCurrency={initialCurrency} />\n    <Orders />\n  </>\n}\n"],"sourceRoot":""}